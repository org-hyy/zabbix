# PostgreSQL custom parameters

# instance version
UserParameter=pgsql.version[*],psql -qAtX $1 -c 'select version()'
UserParameter=pgsql.ping[*],psql -qAtX $1 -c "select '1'"
UserParameter=pgsql.uptime[*],psql -qAtX $1 -c "SELECT now() - pg_postmaster_start_time()"


# total databases size
UserParameter=pgsql.db.totalsize[*],psql -qAtX $1 -c "select sum(pg_database_size(datid)) as total_size from pg_stat_database"

# specific database size (in bytes)
UserParameter=pgsql.db.size[*],psql -qAtX $1 -c "select pg_database_size('$2')"
# database cache hit ratio (percentage)
UserParameter=pgsql.db.cache[*],psql -qAtX $1 -c "select cast(blks_hit/(blks_read+blks_hit+0.000001)*100.0 as numeric(5,2)) as cache from pg_stat_database where datname = '$2'"

# database success rate (percentage)
UserParameter=pgsql.db.success[*],psql -qAtX $1 -c "select cast(xact_commit/(xact_rollback+xact_commit+0.000001)*100.0 as numeric(5,2)) as success from pg_stat_database where datname = '$2'"

#replication
UserParameter=pgsql.replication_delay[*],psql -qAtX $1 -c "select now() - pg_last_xact_replay_timestamp() AS replication_delay"
#connections
UserParameter=pgsql.connections.active[*],psql -qAtX $1 -c "select count(*) from pg_stat_activity where state = 'active'"
UserParameter=pgsql.connections.idle[*],psql -qAtX $1 -c "select count(*) from pg_stat_activity where state = 'idle'"
UserParameter=pgsql.connections.max[*],psql -qAtX $1 -c "show max_connections"
#discovery
UserParameter=pgsql.db.discovery[*],/bin/echo -n '{"data":['; for db in $(psql -qAtX $1 -c "select datname from pg_database where not datistemplate and datallowconn and datname!='postgres'"); do /bin/echo -n "{\"{#DBNAME}\": \"$db\"},"; done |sed -e 's:,$::'; /bin/echo -n ']}'
